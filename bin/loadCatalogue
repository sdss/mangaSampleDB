#!/usr/bin/env python3
# encoding: utf-8
"""
loadCatalogueToSampleDB

Created by José Sánchez-Gallego on 23 Jul 2015.
Licensed under a 3-clause BSD license.

Revision history:
    23 Jul 2015 J. Sánchez-Gallego
      Initial version
    18 Feb 2016 J. Sánchez-Gallego
      Moved to new product ands restructured.
      Made functional.

"""

from __future__ import division
from __future__ import print_function

import argparse
import os
import sys

from mangaSampleDB.utils.catalogue import ingestCatalogue
from mangaSampleDB.utils import create_connection


def main():

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Loads a catalogue and creates the relational table '
                    'linking it to mangasampledb.targets.')

    parser.add_argument('CATFILE', metavar='CATFILE', type=str,
                        help='The file with the catalogue to load')
    parser.add_argument('CATNAME', metavar='CATNAME', type=str,
                        help='The name for this catalogue')
    parser.add_argument('VERSION', metavar='VERSION', type=str,
                        help='The version of the catalogue being loaded')

    parser.add_argument('-v', '--verbose', dest='verbose', action='store_true',
                        default=False, help='Sets the verbose mode.')

    parser.add_argument('-c', '--current', dest='current', default=True,
                        action='store_true',
                        help='Makes the catalogue being loaded the '
                             'current version.')
    parser.add_argument('-o', '--overwrite', dest='overwrite',
                        action='store_true', default=False,
                        help='Removes the current version of the DB '
                             'table if it exists.')
    parser.add_argument('-s', '--step', dest='step',
                        action='store', type=int, default=5000,
                        help='Number of rows to be inserted at a time.')
    parser.add_argument('-l', '--limit', dest='limit',
                        action='store_true', default=False,
                        help='if set, only catalogue targets that '
                             'match the MaNGA sample will be added. Requires '
                             '--match to be set.')
    parser.add_argument('-m', '--match', dest='match', type=str,
                        action='store', nargs=2,
                        metavar=('MATCH_FILE', 'MATCH_DESCRIPTION'),
                        help='The file containing the matching between '
                             'mangaids and the catalogue being loaded '
                             'and the file with the description on how '
                             'the matching was performed.')

    parser_db = parser.add_argument_group(title='Database connect arguments')
    parser_db.add_argument('-d', '--database', dest='database', type=str,
                           default='manga', help='The database name.')
    parser_db.add_argument('-u', '--user', dest='user', type=str,
                           default='manga', help='The database username.')
    parser_db.add_argument('-w', '--password', dest='password', type=str,
                           default='', help='The database password.')
    parser_db.add_argument('-H', '--host', dest='host', type=str,
                           default='localhost', help='The database host.')
    parser_db.add_argument('-p', '--port', dest='port', type=int, default=5432,
                           help='The database port.')

    args = parser.parse_args()

    engine = create_connection(db_name=args.database,
                               username=args.user,
                               password=args.password,
                               host=args.host,
                               port=args.port)

    funcKwargs = {}
    for key in vars(args).keys():
        funcKwargs[key.lower()] = getattr(args, key)

    funcKwargs['engine'] = engine

    ingestCatalogue(**funcKwargs)


if __name__ == '__main__':
    main()
